<!DOCTYPE html>
<!-- saved from url=(0033)http://192.168.0.9:8080/0002.html -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
 	<title>Three.js 0002 - Simple room</title>
  	<meta charset="utf-8">
  	<style>
		body{
			font-family: "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif; 
			font-weight: 300;
			margin: 0px;
			overflow: hidden;
			position: fixed;
		}
		#instructions{
			position: fixed;
			top: 24px;
			z-index: 1;
			background: rgba(255,255,255, 0.7);
			border: solid 3px #000;
			border-radius: 10px;
			left: 30px;
			padding: 10px;
		}
  	</style>
</head>
<body style="margin: 0px;">
 
	<div id="blocker">

		<div id="instructions">
			<span style="font-size:40px">Click to move</span>
			<br>
			(W, A, S, D = Move, SPACE = Jump, MOUSE = Look around)
		</div>

	</div>

	<script src="./Three.js 0002 - Simple room_files/three.js"></script>

	<script src="./Three.js 0002 - Simple room_files/pointerlock-controls.js"></script>
	
  	<script>
 		
 		var App = {};

	 	var app = function(){
			this.width = null;
			this.height = null;
			this.camera = null;
			this.renderer = null;
			this.controls = null;
			this.floorObj = null;
	 	}

	</script>

	<script src="./Three.js 0002 - Simple room_files/pointer-lock-init.js"></script>

	<script>

	 	//init / setup
		app.prototype.init = function() {
 			this.width = window.innerWidth;
    		this.height = window.innerHeight;
    	};

    	//create renderer
    	app.prototype.createRenderer = function(){
			this.renderer = new THREE.WebGLRenderer({antialias:true});
			this.renderer.setSize(this.width, this.height);
			this.renderer.shadowMapEnabled = true;
			document.body.appendChild(this.renderer.domElement);
    	};

    	//create the scene
		app.prototype.createScene = function(){
			this.scene = new THREE.Scene();
			this.scene.fog = new THREE.Fog( 0x000000, 1500, 4000 );
		}

    	//add camera
    	app.prototype.addCamera = function(){
			this.camera = new THREE.PerspectiveCamera(45, this.width / this.height, 0.1, 1000000);
			this.camera.position.y = 150;
			this.camera.position.z = 350;
    	};

    	//dircetional light
    	app.prototype.addDirectionalLight = function(){
			var light = new THREE.DirectionalLight( 0xffffff, 1 )
			light.position.set(0,1,0)
			this.scene.add( light )			
    	};

    	//ambient light
    	app.prototype.addAmbientLight = function(){
			var ambientLight = new THREE.AmbientLight();
			this.scene.add(ambientLight);
    	}

	 	//dom events
		app.prototype.events = function(){
			window.onresize = function(event) {
				App.width = window.innerWidth;	
				App.height = window.innerHeight;
				App.renderer.setSize(App.width, App.height);
				App.camera.aspect = App.width / App.height;
				App.camera.updateProjectionMatrix();
			};
		};

		//touching the skybox?
		app.prototype.canMoveForward = function(){	
			App.controls.canMoveForward = true;

			App.ray.ray.origin.copy( App.controls.getObject().position );
			var intersections = App.ray.intersectObject( App.skybox );

			if ( intersections.length > 0 ) {

				var distance = intersections[ 0 ].distance;

				console.log(distance)

				if ( distance > -150 && distance < 150 ) {
					App.controls.canMoveForward = false;
				}

			}else{
				App.controls.canMoveForward = false;
			}
		}

	 	//annim loop
		app.prototype.animate = function(){
			App.canMoveForward();
			App.controls.update();
			App.renderer.render( App.scene, App.camera );
			requestAnimationFrame( App.animate );
		};

	 	//add controls
	 	app.prototype.addControls = function(){
			this.controls = new THREE.PointerLockControls(this.camera, this);
			this.controls.speedMod = {x: 8,y: 1,z: 15,};
			this.pointerlockInit();
			this.scene.add( this.controls.getObject() );
			this.ray = new THREE.Raycaster();
			this.ray.ray.direction.set( 0, -1, 0 );
	 	}

	 	//add a floor
	 	app.prototype.addFloor = function(){
	 		
			var segments = 1,
				wh = (500*20),
				repeat = 20;

			var texture = THREE.ImageUtils.loadTexture('/img/floor_tile_001.png');
				texture.wrapS = THREE.RepeatWrapping;
				texture.wrapT = THREE.RepeatWrapping;
				texture.repeat.set( repeat, repeat );

	  		var geometry = new THREE.PlaneGeometry(wh, wh, segments, segments);
	      	var material = new THREE.MeshLambertMaterial({ map: texture, color: 0x000000 });
	 			this.floorObj = new THREE.Mesh(geometry, material);
	 			this.floorObj.applyMatrix( new THREE.Matrix4().makeRotationX( - Math.PI / 2 ) );
	  			this.scene.add( this.floorObj );
	 	}

	 	//sky box
	 	app.prototype.addSkybox = function(){
	 		
	 		// create the geometry sphere
			var geometry  = new THREE.SphereGeometry( (500*10), 20, 20)
			
			var texture = THREE.ImageUtils.loadTexture('/img/starfield.jpg');
				texture.wrapS = THREE.RepeatWrapping;

			var material  = new THREE.MeshBasicMaterial({map: texture,side: THREE.BackSide})

				this.skybox = new THREE.Mesh(geometry, material);
				this.scene.add( this.skybox );
	 	}



	 	//create object and run
	 	App = new app();

	 	//must haves
	 	App.events();
	 	App.init();
	 	App.createRenderer();
	 	App.createScene();
	 	App.addCamera();
	 	
	 	//scene objects
	 	App.addAmbientLight();
	 	App.addDirectionalLight();
	 	App.addControls();
	 	App.addSkybox();
	 	App.addFloor();

	 	//render loop
	 	App.animate();
 
  	</script><canvas width="1476" height="943" style="width: 2217px; height: 1417px;"></canvas>


 

<div id="window-resizer-tooltip" style="display: block;"><a href="http://192.168.0.9:8080/0002.html#" title="Edit settings" style="background-image: url(chrome-extension://kkelicaakdanhinjdeammmilcgefonfh/images/icon_19.png);"></a><span class="tooltipTitle">Window size: </span><span class="tooltipWidth" id="winWidth">1920</span> x <span class="tooltipHeight" id="winHeight">1040</span><br><span class="tooltipTitle">Viewport size: </span><span class="tooltipWidth" id="vpWidth">2217</span> x <span class="tooltipHeight" id="vpHeight">1417</span></div></body></html>